var DH = require('./build/default/dh').DiffieHellman;

var p = new Buffer([0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC9, 0x0F, 0xDA, 0xA2,
		    0x21, 0x68, 0xC2, 0x34, 0xC4, 0xC6, 0x62, 0x8B, 0x80, 0xDC, 0x1C, 0xD1,
		    0x29, 0x02, 0x4E, 0x08, 0x8A, 0x67, 0xCC, 0x74, 0x02, 0x0B, 0xBE, 0xA6,
		    0x3B, 0x13, 0x9B, 0x22, 0x51, 0x4A, 0x08, 0x79, 0x8E, 0x34, 0x04, 0xDD,
		    0xEF, 0x95, 0x19, 0xB3, 0xCD, 0x3A, 0x43, 0x1B, 0x30, 0x2B, 0x0A, 0x6D,
		    0xF2, 0x5F, 0x14, 0x37, 0x4F, 0xE1, 0x35, 0x6D, 0x6D, 0x51, 0xC2, 0x45, 
		    0xE4, 0x85, 0xB5, 0x76, 0x62, 0x5E, 0x7E, 0xC6, 0xF4, 0x4C, 0x42, 0xE9,
		    0xA6, 0x3A, 0x36, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x05, 0x63]);
var g = new Buffer([2]);

var iter = 0;

function test() {
    var dh1 = new DH(p, g);
    var dh2 = new DH(p, g);

    var pub1 = new Buffer(dh1.pubKeyLength());
    dh1.pubKeyWrite(pub1);
    var pub2 = new Buffer(dh2.pubKeyLength());
    dh2.pubKeyWrite(pub2);

    var s1 = new Buffer(dh1.secretLength());
    dh1.secretWrite(pub2, s1);
    var s2 = new Buffer(dh2.secretLength());
    dh2.secretWrite(pub1, s2);

    var match = true;
    for(var i = 0; i < s1.length; i++) {
	match = match && s1[i] == s2[i];
    }
    if (!match || s1.length != s2.length) {
	console.log({i: iter, s1: s1, s2: s2});

	dh1.secretWrite(pub2, s1);
	dh2.secretWrite(pub1, s2);

	match = true;
	for(var i = 0; i < s1.length; i++) {
	    match = match && s1[i] == s2[i];
	}
	if (!match || s1.length != s2.length) {
	    console.log({i2: iter, s1: s1, s2: s2});
	}
    }
}

while(true) {
    iter++;
    test();
}